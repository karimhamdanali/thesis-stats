...
running Spark with Averroes for specjvm/raytrace
Loading properties.
Generating the call graph from Spark.

Preparing classes ...
Adding application archive: /u/karim/workspace/averroes-home/benchmarks-averroes/specjvm/raytrace-organized-app.jar
Adding placeholder library archive: /u/karim/workspace/averroes-home/benchmarks-averroes/specjvm/raytrace-placeholder-lib.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 346
Initially reachable methods: 26
Classes with at least one reachable method: 22
[Spark] Pointer Assignment Graph in 0.4 seconds.
Total types: 130
[Spark] Type masks in 0.0 seconds.
VarNodes: 83
FieldRefNodes: 3
AllocNodes: 41
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 42 nodes.
Now handling field references
Worklist has 153 nodes.
Now handling field references
Worklist has 114 nodes.
Now handling field references
Worklist has 28 nodes.
Now handling field references
[Spark] Propagation in 2.9 seconds.
[Spark] Solution found in 3.1 seconds.
[Spark] Number of reachable methods: 250

elapsed time: 8.02s
