...
running Spark for dacapo/lusearch
Loading properties...
Generating the call graph from Spark.

Preparing classes ...
Adding application archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/lusearch-organized-app.jar
Adding placeholder library archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/lusearch-organized-lib.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 21086
Initially reachable methods: 8
Classes with at least one reachable method: 3
[Spark] Pointer Assignment Graph in 0.4 seconds.
Total types: 2647
[Spark] Type masks in 0.0 seconds.
VarNodes: 18
FieldRefNodes: 1
AllocNodes: 5
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 5 nodes.
Now handling field references
Worklist has 1123 nodes.
Now handling field references
Worklist has 1669 nodes.
Now handling field references
Worklist has 2134 nodes.
Now handling field references
Worklist has 2998 nodes.
Now handling field references
Worklist has 2998 nodes.
Now handling field references
Worklist has 2307 nodes.
Now handling field references
Worklist has 1452 nodes.
Now handling field references
Worklist has 678 nodes.
Now handling field references
Worklist has 111 nodes.
Now handling field references
Worklist has 122 nodes.
Now handling field references
[Spark] Propagation in 48.6 seconds.
[Spark] Solution found in 49.4 seconds.
[Spark] Number of reachable methods: 10369
size of original spark is: 53036
Total time to finish: 63.42
=================================================
# edges = 3227
=================================================

elapsed time: 67.32s
