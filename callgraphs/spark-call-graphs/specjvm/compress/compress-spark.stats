...
running Spark for specjvm/compress
Loading properties...
Generating the call graph from Spark.

Preparing classes ...
Adding application archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/specjvm/compress-organized-app.jar
Adding placeholder library archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/specjvm/compress-organized-lib.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 35604
Initially reachable methods: 12
Classes with at least one reachable method: 5
[Spark] Pointer Assignment Graph in 0.5 seconds.
Total types: 4173
[Spark] Type masks in 0.1 seconds.
VarNodes: 28
FieldRefNodes: 2
AllocNodes: 10
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 9 nodes.
Now handling field references
Worklist has 972 nodes.
Now handling field references
Worklist has 1421 nodes.
Now handling field references
Worklist has 1972 nodes.
Now handling field references
Worklist has 2480 nodes.
Now handling field references
Worklist has 2244 nodes.
Now handling field references
Worklist has 2126 nodes.
Now handling field references
Worklist has 1196 nodes.
Now handling field references
Worklist has 602 nodes.
Now handling field references
Worklist has 230 nodes.
Now handling field references
Worklist has 97 nodes.
Now handling field references
Worklist has 31 nodes.
Now handling field references
Worklist has 2 nodes.
Now handling field references
[Spark] Propagation in 53.6 seconds.
[Spark] Solution found in 54.5 seconds.
[Spark] Number of reachable methods: 10404
size of original spark is: 56643
Total time to finish: 68.32
=================================================
# edges = 53
=================================================

elapsed time: 70.38s
