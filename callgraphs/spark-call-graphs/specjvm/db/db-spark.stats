...
running Spark for specjvm/db
Loading properties...
Generating the call graph from Spark.

Preparing classes ...
Adding application archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/specjvm/db-organized-app.jar
Adding placeholder library archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/specjvm/db-organized-lib.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 35604
Initially reachable methods: 13
Classes with at least one reachable method: 6
[Spark] Pointer Assignment Graph in 0.5 seconds.
Total types: 4166
[Spark] Type masks in 0.1 seconds.
VarNodes: 28
FieldRefNodes: 2
AllocNodes: 10
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 9 nodes.
Now handling field references
Worklist has 988 nodes.
Now handling field references
Worklist has 1340 nodes.
Now handling field references
Worklist has 2012 nodes.
Now handling field references
Worklist has 2497 nodes.
Now handling field references
Worklist has 2255 nodes.
Now handling field references
Worklist has 2135 nodes.
Now handling field references
Worklist has 1196 nodes.
Now handling field references
Worklist has 602 nodes.
Now handling field references
Worklist has 230 nodes.
Now handling field references
Worklist has 97 nodes.
Now handling field references
Worklist has 31 nodes.
Now handling field references
Worklist has 2 nodes.
Now handling field references
[Spark] Propagation in 50.7 seconds.
[Spark] Solution found in 51.5 seconds.
[Spark] Number of reachable methods: 10412
size of original spark is: 56862
Total time to finish: 64.66
=================================================
# edges = 72
=================================================

elapsed time: 66.67s
