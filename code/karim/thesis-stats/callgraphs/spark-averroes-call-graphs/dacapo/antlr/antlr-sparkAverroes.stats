...
running Spark with Averroes for dacapo/antlr
Loading properties...
Generating the call graph from Spark.

Preparing classes ...
Adding application archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/antlr-organized-app.jar
Adding placeholder library archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/antlr-placeholder-lib.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 2695
Initially reachable methods: 41
Classes with at least one reachable method: 40
[Spark] Pointer Assignment Graph in 1.2 seconds.
Total types: 402
[Spark] Type masks in 0.4 seconds.
VarNodes: 208
FieldRefNodes: 2
AllocNodes: 124
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 125 nodes.
Now handling field references
Worklist has 368 nodes.
Now handling field references
Worklist has 382 nodes.
Now handling field references
Worklist has 310 nodes.
Now handling field references
Worklist has 2394 nodes.
Now handling field references
Worklist has 526 nodes.
Now handling field references
Worklist has 75 nodes.
Now handling field references
Worklist has 9 nodes.
Now handling field references
[Spark] Propagation in 19.1 seconds.
[Spark] Solution found in 19.4 seconds.
[Spark] Number of reachable methods: 1611
Total time to finish: 26.08
=================================================
# edges = 6982
=================================================

elapsed time: 30.06s
