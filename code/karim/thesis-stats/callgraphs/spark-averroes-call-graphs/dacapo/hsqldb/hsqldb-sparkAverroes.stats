...
running Spark with Averroes for dacapo/hsqldb
Loading properties...
Generating the call graph from Spark.

Preparing classes ...
Adding application archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/hsqldb-organized-app.jar
Adding placeholder library archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/hsqldb-placeholder-lib.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 7588
Initially reachable methods: 128
Classes with at least one reachable method: 122
[Spark] Pointer Assignment Graph in 4.4 seconds.
Total types: 962
[Spark] Type masks in 2.9 seconds.
VarNodes: 1062
FieldRefNodes: 97
AllocNodes: 453
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 457 nodes.
Now handling field references
Worklist has 1856 nodes.
Now handling field references
Worklist has 1924 nodes.
Now handling field references
Worklist has 1228 nodes.
Now handling field references
Worklist has 1127 nodes.
Now handling field references
Worklist has 444 nodes.
Now handling field references
Worklist has 281 nodes.
Now handling field references
Worklist has 1 nodes.
Now handling field references
[Spark] Propagation in 16.9 seconds.
[Spark] Solution found in 17.2 seconds.
[Spark] Number of reachable methods: 4941
Total time to finish: 30.53
=================================================
# edges = 10575
=================================================

elapsed time: 34.69s
