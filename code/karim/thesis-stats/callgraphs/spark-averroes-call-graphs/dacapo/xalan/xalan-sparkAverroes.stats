...
running Spark with Averroes for dacapo/xalan
Loading properties...
Generating the call graph from SparkAverroes.

Preparing classes ...
Adding application archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/xalan-organized-app.jar
Adding placeholder library archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/xalan-placeholder-lib.jar
Adding placeholder library archive: /u4/karim/workspace/thesis-stats/benchmarks-averroes/dacapo/xalan-averroes-lib-class.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 6787
Initially reachable methods: 4
Classes with at least one reachable method: 4
[Spark] Pointer Assignment Graph in 0.1 seconds.
Total types: 899
[Spark] Type masks in 0.0 seconds.
VarNodes: 19
FieldRefNodes: 1
AllocNodes: 4
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 4 nodes.
Now handling field references
Worklist has 860 nodes.
Now handling field references
Worklist has 859 nodes.
Now handling field references
Worklist has 622 nodes.
Now handling field references
Worklist has 414 nodes.
Now handling field references
Worklist has 78 nodes.
Now handling field references
Worklist has 2 nodes.
Now handling field references
[Spark] Propagation in 12.3 seconds.
[Spark] Solution found in 12.6 seconds.
[Spark] Number of reachable methods: 4262
size of original spark is: 17516
Total time to finish: 16.9
=================================================
# edges = 12283
=================================================

elapsed time: 28.97s
