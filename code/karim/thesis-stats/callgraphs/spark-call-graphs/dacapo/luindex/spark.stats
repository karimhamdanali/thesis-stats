...
running the original Spark for dacapo/luindex
Creating call graph output directory.
Loading averroes properties.
Generating the call graph from Spark.
Adding application archive: /u4/karim/workspace/cgc/averroes/dacapo/luindex.jar
Adding library archive: /u4/karim/workspace/cgc/averroes/dacapo/luindex-deps.jar
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 21000
Initially reachable methods: 8
Classes with at least one reachable method: 3
[Spark] Pointer Assignment Graph in 0.9 seconds.
Total types: 2624
[Spark] Type masks in 0.0 seconds.
VarNodes: 18
FieldRefNodes: 1
AllocNodes: 5
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 5 nodes.
Now handling field references
Worklist has 1182 nodes.
Now handling field references
Worklist has 1452 nodes.
Now handling field references
Worklist has 1956 nodes.
Now handling field references
Worklist has 1499 nodes.
Now handling field references
Worklist has 1867 nodes.
Now handling field references
Worklist has 2099 nodes.
Now handling field references
Worklist has 2051 nodes.
Now handling field references
Worklist has 1101 nodes.
Now handling field references
Worklist has 866 nodes.
Now handling field references
Worklist has 537 nodes.
Now handling field references
Worklist has 65 nodes.
Now handling field references
Worklist has 14 nodes.
Now handling field references
[Spark] Propagation in 78.2 seconds.
[Spark] Solution found in 80.8 seconds.
[Spark] Number of reachable methods: 9990
=================================================
Original SPARK call graph size = 50884
=================================================

elapsed time: 120.55s
